
function generateInvoiceData()
{
  const sheet = SpreadsheetApp.getActiveSpreadsheet();
  const sales_sheet = sheet.getSheetByName("売上管理");
  const sales_data = sales_sheet.getDataRange().getValues();
  const invoice_sheet = sheet.getSheetByName("請求書送付管理");
  const invoice_data = invoice_sheet.getDataRange().getValues();
  const existing_invoices = new Set(invoice_data.map(row => row[17])); /* 重複チェック用のR列の売上番号データ */

  let new_row;
  let sale_row;
  let sale_id;
  let range;
  let last_row;

  let bill_start_year;
  let bill_start_month;
  let bill_end_year;
  let bill_end_month;
  let months;
  let billing_date;
  let i;
  let j;
  let k;
  
  for (i = 4; i < sales_data.length; i++)     /* データは5行目から */
  {
    sale_row = sales_data[i];
    sale_id = sale_row[0];

    /* 売上番号が重複していない場合 */
    if (!existing_invoices.has(sale_id))
    {
      /* 請求タイプが都度の場合 */
      if ("都度" == sale_row[3])
      {
        new_row =
        [
          false, /* A列 */ 
          sale_row[4], /* B列 */ 
          "", /* C列 */ 
          "", /* D列 */ 
          sale_row[5], /* E列 */ 
          "", /* F列 */ 
          "", /* G列 */ 
          sale_row[6], /* H列 */ 
          sale_row[1], /* I列 */ 
          sale_row[2], /* J列 */
          "", /* K列 */
          sale_row[7], /* L列 */
          "", /* M列 */
          "", /* N列 */
          "", /* O列 */
          "", /* P列 */
          "", /* Q列 */
          sale_row[0], /* R列 */
        ]

        /* 新しい行を追加し、最終行番号を取得 */
        invoice_sheet.appendRow(new_row);
        last_row = invoice_sheet.getLastRow();

        /* 罫線追加 */
        range = invoice_sheet.getRange(last_row, 1, 1, new_row.length);
        range.setBorder(true, true, true, true, true, true); /* 引数: 上, 下, 左, 右, 内側, 外側 */
      }
    
      /* 定期売上の場合 */
      else if ("定期" == sale_row[3])
      {
        bill_start_year = sale_row[8].getFullYear();
        bill_start_month = sale_row[8].getMonth();
        bill_end_year = sale_row[9].getFullYear();
        bill_end_month = sale_row[9].getMonth();
        
        /* I,J列の年月を取得し、何ヶ月分必要かを計算 */
        /* (定期請求終了年 - 定期請求開始年) ✖️ 12 + (定期請求終了月 - 定期請求開始月 + 1)*/
        months = (bill_end_year - bill_start_year) * 12 + (bill_end_month - bill_start_month) + 1;

        /* 請求月の差分 (I-J) だけnew_rowデータを作成*/
        for (j = 0; j < months; j++)
        {
          /* 請求日(請求開始日以降の毎月月末に仮定) */
          billing_date = new Date(bill_start_year, bill_start_month + j + 1, 0);

          new_row =
          [
            false, /* A列 */ 
            billing_date, /* B列 */ 
            "", /* C列 */
            "", /* D列 */
            sale_row[5], /* E列 */
            "", /* F列 */
            "", /* G列 */ 
            sale_row[6], /* H列 */ 
            sale_row[1], /* I列 */ 
            sale_row[2], /* J列 */
            "", /* K列 */
            sale_row[7], /* L列 */
            "", /* M列 */
            "", /* N列 */
            "", /* O列 */
            "", /* P列 */
            "", /* Q列 */
            sale_row[0], /* R列 */
          ]

          /* 新しい行を追加し、最終行番号を取得 */
          invoice_sheet.appendRow(new_row);
          last_row = invoice_sheet.getLastRow();

          /* 罫線追加 */
          range = invoice_sheet.getRange(last_row, 1, 1, new_row.length);
          range.setBorder(true, true, true, true, true, true); /* 引数: 上, 下, 左, 右, 内側, 外側 */
        }
      }
    }

    /* 売上番号が重複している場合 */
    else
    {
      /* no operation */

      /* 売上番号が重複、かつ定期売上、かつ一部の請求月のみデータがない場合(未実装。要相談) */
    }
  }
}
